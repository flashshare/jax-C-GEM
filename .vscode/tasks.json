{
    "version": "2.0.0",
    "tasks": [
        // ========================================
        // ESSENTIAL EXECUTION TASKS
        // ========================================
        {
            "label": "üöÄ Run Model",
            "type": "shell",
            "command": "python",
            "args": [
                "src/main.py",
                "--mode",
                "run",
                "--output-format",
                "auto",
                "--no-physics-check"
            ],
            "group": {
                "kind": "build",
                "isDefault": true
            },
            "options": {
                "cwd": "${workspaceFolder}"
            },
            "detail": "üéØ Run the C-GEM model with adaptive optimization (auto-detects best format)"
        },
        {
            "label": "‚ö° Ultra-Performance Mode",
            "type": "shell",
            "command": "python",
            "args": [
                "src/main_ultra_performance.py"
            ],
            "group": "build",
            "options": {
                "cwd": "${workspaceFolder}"
            },
            "detail": "‚ö° Ultra-high performance mode with vectorized batch processing (2x faster)"
        },
        {
            "label": "üî¨ Run with Physics Validation",
            "type": "shell",
            "command": "python",
            "args": [
                "src/main.py",
                "--mode",
                "run",
                "--output-format",
                "csv"
            ],
            "group": "build",
            "options": {
                "cwd": "${workspaceFolder}"
            },
            "detail": "üî¨ Run with CSV output format for detailed analysis"
        },
        {
            "label": "üêõ Debug Mode",
            "type": "shell",
            "command": "python",
            "args": [
                "src/main.py",
                "--mode",
                "run",
                "--output-format",
                "csv",
                "--debug"
            ],
            "group": "build",
            "options": {
                "cwd": "${workspaceFolder}"
            },
            "detail": "üêõ Run with debug mode and CSV output"
        },

        // ========================================
        // ANALYSIS AND VISUALIZATION
        // ========================================
        {
            "label": "üé® Generate Publication Figures",
            "type": "shell",
            "command": "python",
            "args": [
                "tools/plotting/publication_output.py",
                "--results-dir", "OUT",
                "--field-data-dir", "INPUT/Calibration",
                "--output-dir", "OUT/Publication"
            ],
            "group": "build",
            "options": {
                "cwd": "${workspaceFolder}"
            },
            "detail": "üé® Generate comprehensive multi-panel publication figures with 3-station analysis"
        },
        {
            "label": "üîç Quick Results View",
            "type": "shell",
            "command": "python",
            "args": [
                "tools/plotting/show_results.py"
            ],
            "group": "build",
            "options": {
                "cwd": "${workspaceFolder}"
            },
            "detail": "üîç Quick interactive visualization (auto NPZ/CSV detection)"
        },

        // ========================================
        // VALIDATION AND BENCHMARKING
        // ========================================
        {
            "label": "üî¨ Statistical Model Validation",
            "type": "shell",
            "command": "python",
            "args": [
                "tools/validation/model_validation_statistical.py"
            ],
            "group": "test",
            "options": {
                "cwd": "${workspaceFolder}"
            },
            "detail": "üî¨ Comprehensive statistical validation with RMSE, R¬≤, Nash-Sutcliffe, residual analysis"
        },
        {
            "label": "üåä Field Data Validation",
            "type": "shell",
            "command": "python",
            "args": [
                "tools/validation/validate_against_field_data.py",
                "--results-dir", "OUT",
                "--field-data-dir", "INPUT/Calibration",
                "--output-dir", "OUT/Validation"
            ],
            "group": "test",
            "options": {
                "cwd": "${workspaceFolder}"
            },
            "detail": "üåä Validate model outputs against CARE, CEM, SIHYMECC field observations"
        },
        {
            "label": "üèÜ Comprehensive C-GEM vs JAX Benchmark",
            "type": "shell",
            "command": "python",
            "args": [
                "tools/validation/comprehensive_cgem_benchmark.py",
                "--output-dir", "OUT/Benchmarks"
            ],
            "group": "test",
            "options": {
                "cwd": "${workspaceFolder}"
            },
            "detail": "üèÜ Complete benchmark: performance, memory, accuracy with publication-ready reports"
        },
        {
            "label": "‚öôÔ∏è Original C-GEM Benchmark",
            "type": "shell",
            "command": "cmd",
            "args": [
                "/c",
                "cd deprecated\\original-C-GEM && compile_and_run.bat"
            ],
            "group": "test",
            "options": {
                "cwd": "${workspaceFolder}"
            },
            "detail": "‚öôÔ∏è Compile and benchmark original C-GEM (365 days) - establishes performance baseline"
        },

        // ========================================
        // SCIENTIFIC ANALYSIS TOOLS
        // ========================================
        {
            "label": "üéØ Gradient-Based Calibration",
            "type": "shell",
            "command": "python",
            "args": [
                "tools/calibration/gradient_calibrator.py",
                "--field-data-dir", "INPUT/Calibration",
                "--output-dir", "OUT/Calibration"
            ],
            "group": "build",
            "options": {
                "cwd": "${workspaceFolder}"
            },
            "detail": "üéØ Run JAX-native gradient-based parameter calibration with sparse data methodology"
        },
        {
            "label": "üìà Sensitivity Analysis",
            "type": "shell",
            "command": "python",
            "args": [
                "tools/analysis/sensitivity_analyzer.py",
                "--results-dir", "OUT",
                "--output-dir", "OUT/Sensitivity"
            ],
            "group": "build",
            "options": {
                "cwd": "${workspaceFolder}"
            },
            "detail": "üìà Perform parameter sensitivity analysis using JAX autodiff"
        }
    ]
}
